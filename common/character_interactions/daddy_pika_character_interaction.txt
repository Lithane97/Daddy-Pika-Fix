open_daddy_pika_cheat_menu = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_cheat_menu_desc
	common_interaction = yes

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			is_ai = no
			NOT = {
				has_character_flag = daddy_pika_cheat_menu
			}
		}
	}
	
	on_send = {
		scope:actor = {
			add_character_flag = daddy_pika_cheat_menu
		}
	}
}

close_daddy_pika_cheat_menu = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_cheat_menu_desc
	common_interaction = yes

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	on_send = {
		scope:actor = {
			remove_character_flag = daddy_pika_cheat_menu
		}
	}
}

# daddy_pika_untarget_character = {
# 	category = interaction_category_cheat_menu
# 	desc = daddy_pika_untarget_character_desc
# 	common_interaction = yes
# 	needs_recipient_to_open = no
	
# 	auto_accept = yes
# 	use_diplomatic_range = no
# 	ignores_pending_interaction_block = yes
	
# 	is_shown = {
# 		scope:recipient = {
# 			has_character_flag = target_character
# 		}
# 		scope:actor = {
# 			is_ai = no
# 			has_character_flag = daddy_pika_cheat_menu
# 		}
# 	}
	
# 	on_send = {
# 		scope:recipient = {
# 			remove_character_flag = target_character
# 		}
# 	}
# }

daddy_pika_edit_character = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_edit_character_desc
	common_interaction = yes
	needs_recipient_to_open = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
	}
	
	on_send = {
		scope:recipient = {
			save_scope_as = char_editor
		}
		scope:actor = {
			save_scope_as = char_editor_actor
			trigger_event = dp_char_editor.1000
		}
	}
}

daddy_pika_character_currency_menu = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_character_currency_menu_desc
	common_interaction = yes

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	on_send = {
		scope:recipient = {
			save_scope_as = currency_scope
		}
		scope:actor = {
			trigger_event = dp_char_interactions.10
		}
	}
}

daddy_pika_character_spawner = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_character_spawner_desc
	common_interaction = yes

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	on_send = {
		scope:recipient = {
			save_scope_as = char_spawner_scope
		}
		scope:actor = {
			add_character_flag = char_numb_1
			trigger_event = char_spawner.1
		}
	}
}

daddy_pika_change_character = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_change_character_desc
	common_interaction = yes
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
		scope:recipient = {
			is_ai = yes
		}
	}

	on_accept = {
		scope:recipient = {
			add_character_flag = daddy_pika_cheat_menu
		}
		scope:actor = {
			remove_character_flag = daddy_pika_cheat_menu
			set_player_character = scope:recipient
		}
	}

	ai_will_do = 0
}

daddy_pika_change_religion = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_change_religion_desc
	common_interaction = yes
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		NOT = { scope:actor.faith = scope:recipient.faith }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:recipient = {
			set_character_faith = scope:actor.faith
		}
	}

	ai_will_do = 0
}

daddy_pika_change_culture = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_change_culture_desc
	common_interaction = yes
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		NOT = { scope:actor.culture = scope:recipient.culture }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:recipient = {
			set_culture = scope:actor.culture
		}
	}

	ai_will_do = 0
}

daddy_pika_change_dynasty = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_change_dynasty_desc
	common_interaction = yes
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		NOT = { scope:actor.house = scope:recipient.house }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:recipient = {
			set_house = scope:actor.house
		}
	}

	ai_will_do = 0
}

daddy_pika_char_modify_vassal_contract_inter = {
	special_interaction = liege_modify_vassal_contract
	interface = modify_vassal_contract
	category = interaction_category_cheat_menu
	common_interaction = yes
	icon = icon_contract_modification_single

	send_name = "modify_vassal_contract_interaction_SEND"
	desc = daddy_pika_char_modify_vassal_contract_inter_desc

	force_notification = yes
	notification_text = MODIFY_VASSAL_CONTRACT_NOTIFICATION_TO_VASSAL
	
	is_shown = {
		scope:recipient = {
			NOT = { this = scope:actor }
			exists = liege
			liege = scope:actor
			is_ruler = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	is_valid_showing_failures_only = {
		NOT = { scope:actor = { is_at_war_with = scope:recipient } } 
	}

	can_send = {
	}

	auto_accept = yes

	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = msg_vassal_contract_change
				title = modify_vassal_contract_interaction_notification
				right_icon = scope:recipient
				every_in_list = {
					list = changed_obligations

					save_scope_as = obligation

					scope:recipient = {
						vassal_contract_set_obligation_level = {
							type = scope:obligation.vassal_contract_type
							level = scope:obligation
						}
					}
				}
			}
		}
	}
}

daddy_pika_vassal_mod_vassal_contract_inter = {
	special_interaction = liege_modify_vassal_contract
	interface = modify_vassal_contract
	category = interaction_category_cheat_menu
	common_interaction = yes
	icon = icon_contract_modification_single

	send_name = "modify_vassal_contract_interaction_SEND"
	desc = daddy_pika_char_modify_vassal_contract_inter_desc

	force_notification = yes
	notification_text = MODIFY_VASSAL_CONTRACT_NOTIFICATION_TO_LIEGE

	redirect = {
		# need to reverse the role for the UI to work properly
		scope:recipient = {
			save_scope_as = secondary_recipient
		}
		scope:actor = {
			save_scope_as = recipient
		}

		scope:secondary_recipient = {
			save_scope_as = actor
		}
	}
	
	is_shown = {
		scope:recipient = {
			is_independent_ruler = no
			NOT = { this = scope:actor }
			liege = scope:actor
		}
		scope:recipient = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	is_valid_showing_failures_only = {
		NOT = { scope:recipient = { is_at_war_with = scope:actor } } 
	}

	can_send = {
	}

	auto_accept = yes

	on_accept = {
		# Enact changes.
		scope:recipient = {
			send_interface_message = {
				type = msg_vassal_contract_change
				title = modify_vassal_contract_interaction_notification
				right_icon = scope:actor
				if = {
					limit = { always = scope:hook }
					use_hook = scope:actor
				}

				every_in_list = {
					list = changed_obligations

					save_scope_as = obligation

					scope:recipient = {
						vassal_contract_set_obligation_level = {
							type = scope:obligation.vassal_contract_type
							level = scope:obligation
						}
					}
				}
			}
		}
	}
}

daddy_pika_arrange_marriage_inter = {
	category = interaction_category_cheat_menu
	common_interaction = no
	auto_accept = yes
	
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	special_interaction = arrange_marriage_interaction
	interface = marriage
	
	redirect = {
		scope:actor = {
			if = {
				limit = {
					exists = matchmaker
					NOT = { this = matchmaker }
				}
				save_scope_as = secondary_actor
				matchmaker = {
					save_scope_as = actor
				}
			}
			if = {
				limit = {
					is_betrothed = yes
					betrothed = scope:recipient
				}

				save_scope_as = secondary_actor
			}
		}

		scope:recipient = {
			if = {
				limit = {
					is_betrothed = yes
					betrothed.matchmaker = scope:actor
					is_adult = yes
					betrothed = {
						is_adult = yes
					}
				}

				save_scope_as = secondary_recipient
				matchmaker = {
					save_scope_as = recipient
				}
				betrothed = {
					save_scope_as = secondary_actor
				}
			}
			if = {
				limit = {
					exists = matchmaker
					NOT = { this = matchmaker }
				}
				save_scope_as = secondary_recipient
				matchmaker = {
					save_scope_as = recipient
				}
			}
		}
	}

	populate_actor_list = {
		scope:actor = {
			add_to_list = characters
			every_courtier = {
				limit = {
					NOT = { is_in_list = characters }
				}
				add_to_list = characters
			}
			every_child = {
				limit = {
					NOT = { is_in_list = characters }
				}
				add_to_list = characters
			}
		}
	}

	populate_recipient_list = {
		scope:recipient = {
			add_to_list = characters
			every_courtier = {
				limit = {
					NOT = { is_in_list = characters }
				}
				add_to_list = characters
			}
			every_child = {
				limit = {
					NOT = { is_in_list = characters }
				}
				add_to_list = characters
			}
		}
	}

	is_shown = {
		scope:actor = {
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
		
		#If you're interacting with someone who isn't their own matchmaker, only show the interaction if they can get married. (If someone isn't their own matchmaker, they will be set as secondary_recipient by code and their matchmaker becomes recipient)
		trigger_if = {
			limit = { exists = scope:secondary_recipient }
			scope:secondary_recipient = {
				OR = {
					marriage_interaction_can_be_picked_trigger = yes #Can marry anyone
					AND = {
						ready_to_marry_betrothed_trigger = yes
						OR = {
							betrothed = scope:secondary_actor
							trigger_if = {
								limit = { exists = betrothed.liege }
								betrothed.liege = scope:actor
							}
						}
					}
				}
			}
		}
	}
	
	is_valid_showing_failures_only = {
	}
	
	can_be_picked = {
	}

	has_valid_target_showing_failures_only = {
	}
	
	on_accept = {
		marriage_interaction_on_accept_effect = yes		
	}

	on_decline = {
	}
	
	ai_accept = {
		base = 100
	}
	
	on_send = {
	}
	
	send_option = {
		flag = matrilineal
		localization = MATRILINEAL_OFFER
		current_description = {
			triggered_desc = {
				trigger = {
					exists = scope:secondary_actor
					scope:secondary_actor = {
						betrothed = scope:secondary_recipient
						matrilinear_betrothal = yes
					}
				}
				desc = "MATRILINEAL_OFFER_BETROTHAL_INFO"
			}
		}
		can_be_changed = {
		}
		starts_enabled = {
			trigger_if = {
				limit = {
					exists = scope:secondary_actor
					scope:secondary_actor = {
						betrothed = scope:secondary_recipient
					}
				}
				scope:secondary_actor = {
					matrilinear_betrothal = yes
				}
			}
		}
	}
	
	send_option = {
		is_shown = {
			scope:secondary_actor = {
				NOT = {
					betrothed = scope:secondary_recipient
				}
			}
		}
		flag = marriage_hook
		localization = MARRIAGE_HOOK
	}
	
	send_options_exclusive = no
	
	show_effects_in_notification = no
	greeting = positive

}

divorce_character_cheat = {
	category = interaction_category_cheat_menu
	desc = divorce_character_cheat_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	

	is_shown = {
		scope:recipient = {
			is_spouse_of = scope:actor
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:actor = {
			divorce_effect = {
				DIVORCER = scope:actor
				DIVORCEE = scope:recipient
			}
		}
	}

	ai_will_do = {
		base = 0
	}
}

daddy_pika_designate_heir = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_designate_heir_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
		NOR = {
			scope:recipient = scope:actor
			scope:recipient = scope:actor.designated_heir
			scope:recipient = scope:actor.father
			scope:recipient = scope:actor.mother
		}
	}

	on_accept = {
		scope:actor = { set_designated_heir = scope:recipient }
	}

	ai_will_do = 0
}

daddy_pika_adopt_m = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_adopt
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
			is_female = no
			has_character_flag = daddy_pika_cheat_menu
			NOT = { scope:recipient.house = scope:actor.house }
		}
		NOR = {
			scope:recipient = scope:actor
			scope:recipient = scope:actor.designated_heir
			scope:recipient = scope:actor.father
			scope:recipient = scope:actor.mother
		}
	}

	on_accept = {
		scope:recipient = { set_father = scope:actor }
		scope:actor = {
			scope:recipient = { set_house = scope:actor.house }
		}
	}

	ai_will_do = 0
}

daddy_pika_adopt_f = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_adopt
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
			is_female = yes
			has_character_flag = daddy_pika_cheat_menu
			NOT = { scope:recipient.house = scope:actor.house }
		}
		NOR = {
			scope:recipient = scope:actor
			scope:recipient = scope:actor.designated_heir
			scope:recipient = scope:actor.father
			scope:recipient = scope:actor.mother
		}
	}

	on_accept = {
		scope:recipient = { set_mother = scope:actor }
		scope:actor = {
			scope:recipient = { set_house = scope:actor.house }
		}
	}

	ai_will_do = 0
}

daddy_pika_disown = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_disown_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			scope:recipient.house = scope:actor.house
		}
		NOR = {
			scope:recipient = scope:actor
			scope:recipient = scope:actor.designated_heir
			scope:recipient = scope:actor.father
			scope:recipient = scope:actor.mother
		}
	}

	on_accept = {
		scope:actor = {
			scope:recipient = { set_to_lowborn = yes }
		}
	}

	ai_will_do = 0
}

daddy_pika_boost_stats = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_boost_stats_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:recipient = {
			if = {
				limit = {
					has_trait = boost_stats
				}
				remove_trait = boost_stats
			}
			else = {
				add_trait = boost_stats
			}
		}
	}

	ai_will_do = 0
}

daddy_pika_slay_character_interaction = {
	category = interaction_category_cheat_menu
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	common_interaction = yes
	icon = icon_dead

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	send_option = {
		flag = random_slayer
		localization = random_slay_character_interaction
	}
	send_option = {
		flag = no_slayer
		localization = null_slay_character_interaction
	}
	send_option = {
		is_valid = {
			NOT = { scope:recipient = scope:actor }
		}
		flag = actor_slayer
		localization = actor_slay_character_interaction
	}

	on_accept = {
		scope:recipient = {
			switch = {
				trigger = yes
				scope:random_slayer = {
					random_independent_ruler = {
						limit = {
							NOT = { this = scope:recipient }
						}
						save_scope_as = rando
					}
					hidden_effect = {
						death = {
							death_reason = death_duel
							killer = scope:rando
						}
					}
				}
				scope:no_slayer = {
					death = { death_reason = death_natural_causes }
				}
				scope:actor_slayer = {
					death = {
						death_reason = death_duel
						killer = scope:actor
					}
				}
			}
		}
	}
	auto_accept = yes
}

daddy_pika_imprison = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_imprison_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:actor = {
			imprison = {
				target = scope:recipient
				type = dungeon
			}
		}
	}

	ai_will_do = 0
}

daddy_pika_usurpy_surp = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_usurpy_surp_desc
	
	use_diplomatic_range = no
	auto_accept = yes
	ignores_pending_interaction_block = yes
	special_interaction = revoke_title_interaction
	#interface = manage_titles
	target_type = title
	target_filter = recipient_domain_titles
	icon = revoke_title
	
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_landed = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	is_valid_showing_failures_only = {
		scope:actor = { is_ai = no }
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:recipient
		}
	}
	
	on_auto_accept = {
	}
	
	on_accept = {
	}
}

daddy_pika_claim_title = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_claim_title_desc
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	target_type = title
	target_filter = recipient_domain_titles
	
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_landed = yes
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	is_valid_showing_failures_only = {
		scope:actor = { is_ai = no }
	}
	
	can_be_picked_title = {
		scope:target = {
			holder = scope:recipient
			tier >= tier_county
		}
	}
	
	auto_accept = yes
	
	on_auto_accept = {
		scope:recipient = {
			trigger_event = char_interaction.0110
		}
	}
	
	on_send = {
		scope:actor = {
			add_pressed_claim = scope:target
		}
	}
}

daddy_pika_revoke_title = {
	category = interaction_category_cheat_menu
	common_interaction = yes
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	desc = daddy_pika_revoke_title_desc

	special_interaction = revoke_title_interaction
	interface = revoke_title
	target_type = title
	target_filter = recipient_domain_titles

	is_shown = {
		scope:recipient = {
			is_landed = yes
			# should be shown but be disabled for indirect vassals
			target_is_liege_or_above = scope:actor
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	is_valid_showing_failures_only = {
	}

	can_send = {
	}
	
	# whether a character can be picked for the interaction, interface only (e.g. picking the first character in the marriage interaction)
	# in character scope, actor and recipient event tagets can be used, but not the secondary characters
	
	has_valid_target_showing_failures_only = {
	}

	send_options_exclusive = no

	on_auto_accept = {
		scope:recipient = {
			trigger_event = char_interaction.0200
		}
	}

	on_send = {
		save_scope_value_as = {
			name = revoke_title_interaction
			value = yes
		}
	}

	on_decline = {
	}
	
	ai_accept = {
		base = 100 # Try to make it 0 for most interactions
	}
	
	ai_frequency = 0 # This is handled via code instead; see REVOKE_TITLE_TICK in the AI defines. All the logic for *if* to send a revoke though is scripted below

	ai_potential = {
	}

	ai_will_do = {
		base = -1000
	}
}

daddy_pika_offer_vassal_inter = {
	category = interaction_category_cheat_menu
	
	common_interaction = yes
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	desc = daddy_pika_offer_vassal_inter_desc
	
	is_shown = {
		scope:recipient = {
			NOT = { this = scope:actor }
			is_landed = yes
			highest_held_title_tier < scope:actor.highest_held_title_tier
			NOT = { government_has_flag = can_not_be_vassal_or_liege }
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	is_valid_showing_failures_only = {
	}
	ai_accept = {
		base = 100
	}

	on_accept = {
		offer_vassalization_interaction_effect = yes
	}

	on_decline = {
	}

	ai_will_do = {
	}
}

daddy_pika_add_to_court = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_add_to_court_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:recipient = {
			is_landed = no
			NOT = {
				is_courtier_of = scope:actor
			}
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			is_landed = yes
		}
	}
	
	on_accept = {
		scope:actor = {
			add_courtier = scope:recipient
		}
	}
}

daddy_pika_befriend = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_befriend_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			NOT = { has_relation_friend = scope:recipient }
		}
	}

	on_accept = {
		scope:actor = {		
			set_relation_friend = scope:recipient
		}
	}

	ai_will_do = 0
}

daddy_pika_unfriend = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_unfriend_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			has_relation_friend = scope:recipient
		}
	}

	on_accept = {
		scope:actor = {		
			remove_relation_friend = scope:recipient
		}
	}

	ai_will_do = 0
}

daddy_pika_make_lover = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_make_lover_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		NOT = { scope:recipient = { age < 16 } }
		NOT = {
			OR ={
				scope:actor = {
					has_relation_lover = scope:recipient
				}
				scope:actor = {
					has_relation_soulmate = scope:recipient
				}
			}
		}
		scope:actor = {
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
	}

	on_accept = {
		scope:actor = {
			set_relation_lover = scope:recipient
		}
	}
}

daddy_pika_remove_lover = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_remove_lover_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_relation_lover = scope:recipient
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
	}

	on_accept = {
		scope:actor = {
			remove_relation_lover = scope:recipient
		}
	}
}

daddy_pika_make_soulmate = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_make_soulmate_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:recipient = {
			is_spouse_of = scope:actor
		}
		NOT = { scope:recipient = scope:actor }
		NOT = { scope:recipient = { age < 16 } }
		scope:actor = {
			has_character_flag = daddy_pika_cheat_menu
			has_relation_lover = scope:recipient
			is_ai = no
		}
		NOT = {
			scope:actor = {
				has_relation_soulmate = scope:recipient
			}
		}
	}

	on_accept = {
		scope:actor = {
			set_relation_soulmate = scope:recipient
			remove_relation_lover = scope:recipient
		}
	}
}

daddy_pika_remove_soulmate = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_make_soulmate_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:recipient = {
			is_spouse_of = scope:actor
		}
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
		scope:actor = {
			has_relation_soulmate = scope:recipient
		}
	}

	on_accept = {
		scope:actor = {
			remove_relation_soulmate = scope:recipient
		}
	}
}

daddy_pika_make_rival = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_make_rival_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:actor = {
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
		NOT = { scope:recipient = scope:actor }
		NOT = {
			scope:actor = {
				any_relation = {
				type = rival
					this = scope:recipient
				}
			}
		}
	}

	on_accept = {
		scope:actor = {
			set_relation_rival = scope:recipient
		}
	}
}

daddy_pika_remove_rival = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_remove_rival_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			has_relation_rival = scope:recipient
			has_character_flag = daddy_pika_cheat_menu
			is_ai = no
		}
	}

	on_accept = {
		scope:actor = {
			remove_relation_rival = scope:recipient
		}
	}
}

daddy_pika_concubine_cheat = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_concubine_cheat_desc
	common_interaction = no

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		NOT = { scope:recipient = { age < 16 } }
		scope:recipient = {
			sex_opposite_of = scope:actor
			is_concubine = no
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			allowed_concubines = yes
			allowed_more_concubines = yes
		}
	}
	
	on_send = {
		scope:actor = {
			make_concubine = scope:recipient
		}
	}
}

daddy_pika_impregnate_cheat = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_impregnate_cheat_desc
	common_interaction = no

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		NOT = { scope:actor = scope:recipient }
		scope:recipient = {
			is_pregnant = no
			is_female = yes
		}
		NOT = { scope:recipient = { age < 16 } }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			is_male = yes
		}
	}
	
	on_send = {
		scope:recipient = {
			random_list = {
				90 = {
					make_pregnant = {
						father = scope:actor
						number_of_children = 1
					}
				}
				10 = {
					make_pregnant = {
						father = scope:actor
						number_of_children = 2
					}
				}
			}
		}
	}
}

### SLEEP WITH CHARACTER ###

dp_sex_interaction = { 
	icon = seducer
	category = interaction_category_cheat_menu
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}
	
	on_accept = { 
		scope:actor = { 
			trigger_event = dp_char_interactions.11 
		} 
	}
	auto_accept = yes
}

daddy_pika_add_strong_hook = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_add_strong_hook_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:actor = {
			add_hook = {
				target = scope:recipient
				type = strong_test_hook
			}
		}
	}
}

daddy_pika_excommunicate = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_excommunicate_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		NOT = {
			scope:recipient = {
				has_trait = excommunicated
			}
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:recipient = {
			add_trait = excommunicated
		}
	}

	ai_will_do = 0
}

daddy_pika_remove_excommunication = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_remove_excommunication_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes
	
	is_shown = {
		scope:recipient = {
			has_trait = excommunicated
		}
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:recipient = {
			remove_trait = excommunicated
		}
	}

	ai_will_do = 0
}

daddy_pika_commit_suicide = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_commit_suicide_desc
	common_interaction = no

	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		scope:recipient = scope:actor
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
		}
	}

	on_accept = {
		scope:actor = {		
			death = {
				killer = scope:actor
				death_reason = "death_murder"
			}
		}
	}

	ai_will_do = 0
}

daddy_pika_extermination_process = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_extermination_process_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			NOT = { has_character_flag = extermination_processing }
		}
	}

	on_accept = {
		scope:actor = {
			add_character_flag = extermination_processing
		}
		scope:recipient = {
			add_to_list = dyn_clear
		}
	}

	ai_will_do = 0
}

daddy_pika_designate_survivors = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_designate_survivors_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			has_character_flag = extermination_processing
		}
	}

	on_accept = {
		scope:recipient = {
			add_character_flag = saved_from_extermination
		}
	}

	ai_will_do = 0
}

daddy_pika_designate_survivors_remove = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_designate_survivors_remove_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			has_character_flag = extermination_processing
		}
		scope:recipient = {
			has_character_flag = saved_from_extermination
		}
	}

	on_accept = {
		scope:recipient = {
			remove_character_flag = saved_from_extermination
		}
	}

	ai_will_do = 0
}

daddy_pika_murder_off_dynasty = {
	category = interaction_category_cheat_menu
	desc = daddy_pika_murder_off_dynasty_desc
	common_interaction = no
	
	auto_accept = yes
	use_diplomatic_range = no
	ignores_pending_interaction_block = yes

	is_shown = {
		NOT = { scope:recipient = scope:actor }
		scope:actor = {
			is_ai = no
			has_character_flag = daddy_pika_cheat_menu
			has_character_flag = extermination_processing
		}
	}

	on_accept = {
		scope:recipient = {
			every_close_or_extended_family_member = {
				limit = {
					NOT = { has_character_flag = saved_from_extermination }
					NOT = { has_character_flag = extermination_processing }
				}
				add_to_list = dyn_clear
			}
			every_dynasty_member = {
				limit = {
					NOT = { has_character_flag = saved_from_extermination }
					NOT = { has_character_flag = extermination_processing }
				}
				add_to_list = dyn_clear
			}
			every_in_list = {
				list = dyn_clear
				death = {
					killer = scope:actor
					death_reason = "death_murder"
				}
			}
		}
		scope:actor = {
			remove_character_flag = extermination_processing
		}
	}

	ai_will_do = 0
}


#Whoa there buddy.